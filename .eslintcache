[{"D:\\habit-tracker\\src\\index.js":"1","D:\\habit-tracker\\src\\reportWebVitals.js":"2","D:\\habit-tracker\\src\\App.js":"3","D:\\habit-tracker\\src\\Components\\InputPanel.js":"4","D:\\habit-tracker\\src\\Components\\Calendar\\Calendar.js":"5","D:\\habit-tracker\\src\\Components\\Calendar\\Week.js":"6","D:\\habit-tracker\\src\\Components\\Calendar\\Day.js":"7","D:\\habit-tracker\\src\\Components\\Calendar\\WeekDays.js":"8","D:\\habit-tracker\\src\\Components\\Calendar\\Data.js":"9","D:\\habit-tracker\\src\\Hooks\\useForm.js":"10"},{"size":548,"mtime":1608574430568,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":818,"mtime":1613674228116,"results":"14","hashOfConfig":"12"},{"size":4699,"mtime":1613674406151,"results":"15","hashOfConfig":"12"},{"size":3803,"mtime":1613674022805,"results":"16","hashOfConfig":"12"},{"size":165,"mtime":1608581792541,"results":"17","hashOfConfig":"12"},{"size":1692,"mtime":1612827375881,"results":"18","hashOfConfig":"12"},{"size":451,"mtime":1608587159287,"results":"19","hashOfConfig":"12"},{"size":1415,"mtime":1608586771718,"results":"20","hashOfConfig":"12"},{"size":498,"mtime":1612306287314,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1kpsv1m",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\habit-tracker\\src\\index.js",[],["49","50"],"D:\\habit-tracker\\src\\reportWebVitals.js",[],"D:\\habit-tracker\\src\\App.js",["51","52","53","54"],"import React, { useState, useEffect } from 'react';\n\n//BootStrap\nimport { Container, Row, Col } from 'react-bootstrap'\n\n//Components\nimport Calendar from './Components/Calendar/Calendar';\nimport InputPanel from './Components/InputPanel';\nimport './App.css';\n\n\nimport useForm from './Hooks/useForm'\n\nconst App = () => {\n\n  const { handleChange, formData, setFormData } = useForm();\n  const [update, forceUpdate] = useState(false);\n\n\n  const loadData = (num) => {\n\n  }\n\n\n  const saveData = () => {\n\n  }\n\n\n  useEffect(() => {\n\n\n\n\n  }, [])\n\n  return (\n    <Container className=\"h-100\" fluid>\n      <Row className=\"h-100\">\n        <InputPanel saveData={saveData} forceUpdate={forceUpdate} update={update} />\n        <Calendar loadData={loadData} update={update} />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","D:\\habit-tracker\\src\\Components\\InputPanel.js",["55"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport useForm from '../Hooks/useForm'\r\n\r\nconst InputPanel = ({ saveData, forceUpdate, update }) => {\r\n\r\n    const [todaysDate, setTodaysDate] = useState('');\r\n\r\n    const { handleChange, formData, setFormData } = useForm();\r\n\r\n    const handleClick = () => {\r\n\r\n        const timeElapsed = Date.now();\r\n        const today = new Date(timeElapsed);\r\n        console.log(today.toDateString());\r\n        localStorage.setItem(today.toDateString(), JSON.stringify(formData))\r\n        forceUpdate(!update)\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const timeElapsed = Date.now();\r\n        const today = new Date(timeElapsed);\r\n        setTodaysDate(today.toDateString());\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(formData);\r\n    }, [formData])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Col className=\"h-100 shadow-lg\" xl={3}>\r\n            <Row className=\"text-center\">\r\n                <Col>\r\n                    <h1> Habbit Tracker </h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"text-center\">\r\n                <Col>\r\n                    <h3>{todaysDate}</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"Form__col\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicRange\">\r\n                                    <Form.Label>When you woke up, how did you feel?  </Form.Label>\r\n                                    <Form.Control type=\"range\" name='happy' onChange={handleChange} />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            Did you......?\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Check\r\n                                type=\"switch\"\r\n                                id=\"Excercise\"\r\n                                label=\"Excercise 1hr\"\r\n                                name=\"excercise\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Check\r\n                                type=\"switch\"\r\n                                id=\"Stretch\"\r\n                                label=\"Stretch 10 mins\"\r\n                                name=\"stretch\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Check\r\n                                type=\"switch\"\r\n                                id=\"Meditate\"\r\n                                label=\"Meditate 20 mins\"\r\n                                name=\"meditate\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Check\r\n                                type=\"switch\"\r\n                                id=\"Coffee\"\r\n                                label=\"Drink Coffee\"\r\n                                name=\"coffee\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Journal: </Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={3} name=\"journal\" onChange={handleChange} />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Button onClick={handleClick}>Done</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Quote Of The Day</h4>\r\n                            <h5>- Author </h5>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Col>\r\n\r\n    )\r\n}\r\n\r\nexport default InputPanel\r\n","D:\\habit-tracker\\src\\Components\\Calendar\\Calendar.js",["56","57","58","59","60","61"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Week from './Week'\r\nimport Day from './Day'\r\nimport WeekDays from './WeekDays'\r\nimport Data from './Data'\r\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from 'react-icons/fa'\r\n\r\n\r\n\r\nconst CalendarPanel = ({ loadData, update }) => {\r\n\r\n    const [value, onChange] = useState(new Date());\r\n    const [monthName, setMonthName] = useState('');\r\n    const [numOfDays, setNumOfDays] = useState([]);\r\n    const [arrOfDates, setArrOfDates] = useState([]);\r\n    const [todaysDate, setTodaysDate] = useState(0);\r\n    const calendar = Object.entries(Data)\r\n\r\n\r\n    const createCalendar = () => {\r\n\r\n        const today = new Date();\r\n        const thisYear = today.getFullYear();\r\n\r\n        const lastMonthNum = today.getMonth() - 1;\r\n        const lastMonth = calendar[lastMonthNum][1];\r\n\r\n        const thisMonthNum = today.getMonth();\r\n        const thisMonth = calendar[thisMonthNum][1];\r\n\r\n\r\n        const nextMonthNum = today.getMonth() + 1;\r\n        const nextMonth = calendar[nextMonthNum][1]\r\n\r\n\r\n\r\n\r\n        const firstOfTheMonth = new Date(`${thisMonth.name} 1, ${thisYear} 00:00:00`)\r\n\r\n        let daysInCalendar = [];\r\n        let datesInCalendar = [];\r\n\r\n        let currentDate = new Date(`${lastMonth.name} 1, ${thisYear} 00:00:00`);\r\n\r\n        for (let i = 0; i < firstOfTheMonth.getDay(); i++) {\r\n            daysInCalendar.push(lastMonth.days)\r\n            currentDate.setDate(lastMonth.days)\r\n            datesInCalendar.push(currentDate.toDateString());\r\n        }\r\n\r\n        currentDate = new Date();\r\n\r\n        for (let j = 1; j <= thisMonth.days; j++) {\r\n            currentDate.setDate(j);\r\n            datesInCalendar.push(currentDate.toDateString())\r\n            daysInCalendar.push(j);\r\n        }\r\n\r\n        currentDate = new Date(`${nextMonth.name} 1, ${thisYear} 00:00:00`);\r\n\r\n        for (let k = 1; k <= 35 - daysInCalendar.length + 1; k++) {\r\n            currentDate.setDate(k)\r\n            datesInCalendar.push(currentDate.toDateString());\r\n            daysInCalendar.push(k)\r\n\r\n        }\r\n\r\n        setMonthName(thisMonth.name)\r\n        setNumOfDays(() => [...daysInCalendar])\r\n        setArrOfDates(() => [...datesInCalendar])\r\n        setTodaysDate(today.getDate())\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        createCalendar();\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        createCalendar();\r\n\r\n    }, [update])\r\n\r\n\r\n\r\n\r\n    const switchMonth = (direction) => {\r\n\r\n    }\r\n\r\n\r\n\r\n    let listCalendarDays = arrOfDates.map((el, i) =>\r\n\r\n\r\n        <Day date={el} today={i === todaysDate ? true : false} key={i} index={i} loadData={loadData} />\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Col className=\"h-100\" xl={9}>\r\n            <Row>\r\n                <Col>\r\n                    <Row className=\"justify-content-center text-center\" style={{ height: '10%' }}>\r\n                        <Col className=\"my-auto\" xl={1}>\r\n                            <FaArrowAltCircleLeft size={32} onClick={() => switchMonth('prev')} />\r\n                        </Col>\r\n                        <Col className=\"my-auto\" xl={2}>\r\n                            <h1>{monthName}</h1>\r\n                        </Col>\r\n                        <Col className=\"my-auto\" xl={1}>\r\n                            <div><FaArrowAltCircleRight size={32} onClick={() => switchMonth('next')} /></div>\r\n                        </Col>\r\n                    </Row>\r\n                    <table id='calendar'>\r\n                        <tbody>\r\n                            <WeekDays />\r\n                            {listCalendarDays}\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Col>\r\n\r\n    )\r\n}\r\n\r\nexport default CalendarPanel\r\n","D:\\habit-tracker\\src\\Components\\Calendar\\Week.js",[],"D:\\habit-tracker\\src\\Components\\Calendar\\Day.js",["62"],"import React, { useState } from 'react'\r\nimport { GiMeditation } from 'react-icons/gi'\r\nimport { BiDumbbell } from 'react-icons/bi'\r\nimport { GrYoga } from 'react-icons/gr'\r\nimport { AiOutlineCoffee } from 'react-icons/ai'\r\n\r\nconst darkBlue = '#51c2d5';\r\nconst lightBlue = '#bbf1fa';\r\nconst purple = '#663f3f';\r\nconst white = '#ffffff'\r\n\r\nconst Days = ({ date, today, loadData }) => {\r\n    const [bgColor, setBgColor] = useState(today ? darkBlue : lightBlue);\r\n\r\n    const style = {\r\n        backgroundColor: bgColor\r\n    }\r\n\r\n    const handleMouseEnter = () => {\r\n\r\n        setBgColor(white)\r\n\r\n\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n\r\n        setBgColor(today ? darkBlue : lightBlue);\r\n\r\n    }\r\n\r\n    let dataFound = localStorage.getItem(date);\r\n    let data;\r\n\r\n    let meditate = false;\r\n    let stretch = false;\r\n    let excercise = false;\r\n    let coffee = false;\r\n    if (dataFound) {\r\n        console.log(date)\r\n        data = JSON.parse(dataFound);\r\n        meditate = data.meditate === 'on' ? true : false;\r\n        stretch = data.stretch === 'on' ? true : false;\r\n        excercise = data.excercise === 'on' ? true : false;\r\n        coffee = data.coffee === 'on' ? true : false;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <td className=\"day other-month\" style={style} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} >\r\n            <div className=\"date\">{date.split(' ')[2]}</div>\r\n            <div>{meditate ? <GiMeditation /> : ''}</div>\r\n            <div>{stretch ? <GrYoga /> : ''}</div>\r\n            <div>{excercise ? <BiDumbbell /> : ''}</div>\r\n            <div>{coffee ? <AiOutlineCoffee /> : ''}</div>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default Days\r\n","D:\\habit-tracker\\src\\Components\\Calendar\\WeekDays.js",[],["63","64"],"D:\\habit-tracker\\src\\Components\\Calendar\\Data.js",["65"],"export default {\r\n    \"Jan\": {\r\n        \"name\": \"January\",\r\n        \"short\": \"Jan\",\r\n        \"number\": 1,\r\n        \"days\": 31\r\n    },\r\n    \"Feb\": {\r\n        \"name\": \"February\",\r\n        \"short\": \"Feb\",\r\n        \"number\": 2,\r\n        \"days\": 28\r\n    },\r\n    \"Mar\": {\r\n        \"name\": \"March\",\r\n        \"short\": \"Mar\",\r\n        \"number\": 3,\r\n        \"days\": 31\r\n    },\r\n    \"Apr\": {\r\n        \"name\": \"April\",\r\n        \"short\": \"Apr\",\r\n        \"number\": 4,\r\n        \"days\": 30\r\n    },\r\n    \"May\": {\r\n        \"name\": \"May\",\r\n        \"short\": \"May\",\r\n        \"number\": 5,\r\n        \"days\": 31\r\n    },\r\n    \"Jun\": {\r\n        \"name\": \"June\",\r\n        \"short\": \"Jun\",\r\n        \"number\": 6,\r\n        \"days\": 30\r\n    },\r\n    \"Jul\": {\r\n        \"name\": \"July\",\r\n        \"short\": \"Jul\",\r\n        \"number\": 7,\r\n        \"days\": 31\r\n    },\r\n    \"Aug\": {\r\n        \"name\": \"August\",\r\n        \"short\": \"Aug\",\r\n        \"number\": 8,\r\n        \"days\": 31\r\n    },\r\n    \"Sep\": {\r\n        \"name\": \"September\",\r\n        \"short\": \"Sep\",\r\n        \"number\": 9,\r\n        \"days\": 30\r\n    },\r\n    \"Oct\": {\r\n        \"name\": \"October\",\r\n        \"short\": \"Oct\",\r\n        \"number\": 10,\r\n        \"days\": 31\r\n    },\r\n    \"Nov\": {\r\n        \"name\": \"November\",\r\n        \"short\": \"Nov\",\r\n        \"number\": 11,\r\n        \"days\": 30\r\n    },\r\n    \"Dec\": {\r\n        \"name\": \"December\",\r\n        \"short\": \"Dec\",\r\n        \"number\": 12,\r\n        \"days\": 31\r\n    }\r\n}","D:\\habit-tracker\\src\\Hooks\\useForm.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":26,"nodeType":"72","messageId":"73","endLine":4,"endColumn":29},{"ruleId":"70","severity":1,"message":"74","line":16,"column":11,"nodeType":"72","messageId":"73","endLine":16,"endColumn":23},{"ruleId":"70","severity":1,"message":"75","line":16,"column":25,"nodeType":"72","messageId":"73","endLine":16,"endColumn":33},{"ruleId":"70","severity":1,"message":"76","line":16,"column":35,"nodeType":"72","messageId":"73","endLine":16,"endColumn":46},{"ruleId":"70","severity":1,"message":"76","line":9,"column":37,"nodeType":"72","messageId":"73","endLine":9,"endColumn":48},{"ruleId":"70","severity":1,"message":"77","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":12},{"ruleId":"70","severity":1,"message":"78","line":13,"column":12,"nodeType":"72","messageId":"73","endLine":13,"endColumn":17},{"ruleId":"70","severity":1,"message":"79","line":13,"column":19,"nodeType":"72","messageId":"73","endLine":13,"endColumn":27},{"ruleId":"70","severity":1,"message":"80","line":15,"column":12,"nodeType":"72","messageId":"73","endLine":15,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":81,"column":8,"nodeType":"83","endLine":81,"endColumn":10,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"82","line":87,"column":8,"nodeType":"83","endLine":87,"endColumn":16,"suggestions":"85"},{"ruleId":"70","severity":1,"message":"86","line":9,"column":7,"nodeType":"72","messageId":"73","endLine":9,"endColumn":13},{"ruleId":"66","replacedBy":"87"},{"ruleId":"68","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":1,"nodeType":"91","endLine":74,"endColumn":2},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'handleChange' is assigned a value but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'Week' is defined but never used.","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","'numOfDays' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createCalendar'. Either include it or remove the dependency array.","ArrayExpression",["94"],["95"],"'purple' is assigned a value but never used.",["92"],["93"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [createCalendar]",{"range":"100","text":"101"},"Update the dependencies array to be: [createCalendar, update]",{"range":"102","text":"103"},[2381,2383],"[createCalendar]",[2449,2457],"[createCalendar, update]"]